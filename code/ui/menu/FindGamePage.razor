@using System
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Menu;
@attribute [StyleSheet]
@inherits Panel
@implements INavigatorPage
@namespace Facepunch.Pool.Menu

<root class="layout">

    <div class="navbar">

        <div class="left">
            <a class="button" href="/"> Home </a>
            <span class="block">&gt;</span>
            <span class="block">Find a Game</span>
        </div>

        <div class="right">
            
        </div>
    </div>

    <div class="body columned">
       <span class="waiting-label">Waiting for Opponent...</span>
    </div>

</root>

@code
{
    private RealTimeUntil NextFindLobbies { get; set; }
    private bool IsLoadingGame { get; set; }
    private bool IsPageOpen { get; set; }
    private ILobby Lobby { get; set; }

    public void OnNavigationOpen()
    {
        IsPageOpen = true;
        JoinOrCreateLobby();
    }

    public void OnNavigationClose()
    {
        IsLoadingGame = false;
        IsPageOpen = false;

        Lobby?.Leave();
        Lobby = null;
    }

    private async void JoinOrCreateLobby()
    {
        NextFindLobbies = 5f;

        Lobby?.Leave();
        Lobby = null;

        var lobbies = await Game.Menu.QueryLobbiesAsync();

        foreach ( var lobby in lobbies )
        {
            if ( lobby.MemberCount < lobby.MaxMembers )
            {
                var success = await lobby.JoinAsync();

                if (!IsPageOpen) return;

                if ( success )
                {
                    Lobby = lobby;

                    if ( Lobby.State == "ready" )
                    {
                        Lobby.LaunchGameAsync();
                        IsLoadingGame = true;
                    }

                    return;
                }
            }
        }

        if (!IsPageOpen) return;

        Log.Info("Creating lobby...");
        Lobby = await Game.Menu.CreateLobbyAsync(2);
        Lobby.Map = "maps/pool_lounge_v2.vpk";
    }

    private async void TryFindAvailableLobbies()
    {
        var lobbies = await Game.Menu.QueryLobbiesAsync();

        foreach ( var lobby in lobbies )
        {
            if ( lobby.MemberCount < lobby.MaxMembers )
            {
                var success = await lobby.JoinAsync();

                if (!IsPageOpen) return;

                if (success)
                {
                    Log.Info("Found a new lobby to join...");
                    Lobby?.Leave();
                    Lobby = lobby;

                    if (Lobby.State == "ready")
                    {
                        Lobby.LaunchGameAsync();
                        IsLoadingGame = true;
                    }

                    return;
                }
            }
        }
    }

    public override void Tick()
    {
        base.Tick();

        if (Lobby == null || IsLoadingGame) return;

        if ( Lobby.Owner.IsMe )
        {
            if ( Lobby.MemberCount == Lobby.MaxMembers )
            {
                Log.Info("Starting game...");
                Lobby.LaunchGameAsync();
                IsLoadingGame = true;
            }
        }
        else if (Lobby.State == "active")
        {
            Log.Info("Joining game...");
            Lobby.LaunchGameAsync();
            IsLoadingGame = true;
        }

        if (Lobby != null && Lobby.State == "loading") return;

        if ( !IsLoadingGame && NextFindLobbies )
        {
            TryFindAvailableLobbies();
            NextFindLobbies = 5f;
        }
    }
}
